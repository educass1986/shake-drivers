17/12/2005 Accelerometer interfacing to uController

Initially was going to use the LIS3L02DQ (QFN44 package) but on the ST website this part is not recommended for new designs. Instead the LIS3LV02DQ (QFN28 package) is recommended.

Enhancements to the LIS3LV02DQ
Added pin for an external clock input
Has selectable +/-2g or +/-6g range

Other differences:
The srandard output data rates are substantially different – 
Original version

And the V version – 

Also the address ing mode is different – the V version uses the MSB of the register address field (7 bit address field) as an address increment flag. Thus the absolute address range is 7bits for the LIS3L02DQ and 6 bits for the LIS3LV02DQ.

Reading data from the LIS3L02DQ can only be done one byte at a time. On the V version, subsequent bytes can be read after the one address byte.

The V version has extended interrupt functionality including direction detection, drop detection and threshold detection. The original just seems to have threshold detection.

17/12/2005 Accelerometer Performance characteristics

PartADXL311JELIS3L02DQLIS3LV02DQKXP74 - 1050KXM52H34CX,YBW[Hz]600011206403300100Noise [uG/rootHz]
@Vdd = 3V30017535270Non-Linearity Typ [%]+/-0.2+/-0.3+/-2+/-0.1+/-2Non-Linearity Max [%]-+/-1.5+/-0.5ZBW[Hz]-1700??>
100Noise [mG/rootHz]-17565270Non-Linearity Typ [%]-+/-0.6+/-3+/-0.1+/-2Non-Linearity Max [%]-+/-2+/-0.5Range(G)222 or 6 adjustable1to6 fixed1to6 fixed3Max SPI freq, Vdd = 3.3V [MHz]8?Dims5x57x77x75x55x53.4x
3.7OutputAnalogDigita;DigitalDigananaCross Axis Typ [%]+/-2+/-2+/-3.5+/-2+/-2Cross Axis Max [%]-+/-4+/-3+/-6Supply Current typ [mA]0.410.650.81.50.35

17/12/2005 Overcoming non-linearity
 The LIS3LV is preferred over the kionix parts as it provides the two measurement ranges (2g and 6g). However, the LIS3LV has large non-linearity specs.

Linearity in the +/- 1g range can be compensated for using a look-up table who’s values were derived from a lengthy calibration routine. This routine would involve rotating the device about the z axis and taking measurements at several hundred points in the circle, and also recording the rotation angle. ( this could be done with a stepper motor, suitable software running on a PC and a suitable and stable jig). Then the procedure would have to be repeated for the z-axis (rotate about the x or y axis).

Linearity compensation in the larger ranges ( ie +/-6G) will require a more advanced jig – the accelerations will need to be simulated by centripetal forces (this time I can use the MESH calibration jig motor + driver). The procedure will have to happen over all 6 orientations. 4 orientations since x+,y+ can happen together and x-,y- also can happen together, and then there is z+ and z-. To minimize errors, the rotation plane will have to be as flat as possible. Also, the distance from the accelerometer to the rotation centre should be quite large, so that errors due to the absolute accelerometer distance from the rotation centre are minimized.


19/12/2005 Data transfer overhead using the LIS3LV02DQ

Assume that the ODR = 640Hz (BW = 160Hz)
Reading the data takes 7 bytes (1 address byte, 6 data bytes using the incremental addressing scheme)
Assume that the SPI clock frequency = 4MHz
Assume that the SPI overhead is an additional byte.
Then bits per read = 8*8 = 64bits == 16uS
%uController time = 16u*640 = 1.02%

20/12/2005 Using an external clock for the LIS3LV02DQ

Requires a 1045kHz +/- 10% clock
This gives a ODR of 2560Hz apparently
Which means that the ODR is 1/408.2 of the clock frequency. This does not make much sense…
256+128 = 384
Not very close. Will need to measure the ODR as a function of the clock input.

23/12/2005 possible alternative accelerometer

 HYPERLINK "http://www.hitachimetals.com/news/3-axis_accelerometer_press_release.cfm" http://www.hitachimetals.com/news/3-axis_accelerometer_press_release.cfm

(1)World’s Smallest 3-axis accelerometer
 Current productsNewly developed sensorRemarksTypeH48CH34C Package size4.8 mm×4.8 mm3.4 mm×3.7 mm Package thickness1.5 mm0.92 mm Cubic volume35 mm312 mm3 Acceleration detection range±3 G±3 G Power-source voltage2.2 to 3.6 V2.2 to 3.6 V Current drain0.6 mA0.4 mAPower-source voltage:3 V, 25°C
A massive reduction in size compared to the LIS3LV02DQ
 Am requesting more info…



28/01/2006 Clocking solution for the LIS3LVDQ accelerometer

It is crucial to the data signal integrity that the PIC clock is the master for all the data sampling in the medium time frame. The LIS3LV can accept an external clock if it is in a particular range. This could be generated by the PIC, but this would not be conducive to operating in the accelerometer sleep/wakeup interrupt mode, since the PIC would have to stay awake and hence would consume too much power.

Also in normal operation, there will be many situations where the PIC will sleep in between bursts of processing activity.
(note: high data rates on the UART may limit the sleep duty cycle substantially, lower clock speeds will likely be required)

So, It may be best to allow the LIS3LVDQ to use it’s internal oscillator for the sampling, and then to resample this data within the PIC.
(the fastest standard data output rates of the LIS3LVDQ are 640Hz and 2560Hz)
How is this re-sampling achieved, considering that the input sample rate is not fixed?

Possible solution:
Measure the output data rate of the accelerometer, and set the interpolation ratio accordingly?
- messy, and probably computationaly cumbersome.

Ultimately, the data is to be decimated, even if the data from the LIS3LV is only at 640Hz, the likely highest output sample rate is 300Hz or so. Herein lies the problem – simple decimation is efficient if the ratio is an integer. Otherwise the data must first be interpolated by the numerator of the required sample rate adjusting fraction and subsequently decimated by the denominator of that fraction.

What if the data ready interrupt is disabled, and the accelerometer is set to sample continiously at max rate of 2560Hz (BW = 640Hz). If the PIC then grabs this data at approx the same speed, what will be error in the signal be? Will the error be completely out of band?

The PIC would either
1) grab a set of consecutive samples, followed by missing a sample, etc if the PIC sample rate is higher than that of the accelerometer
2) grab a consecutive set of samples, followed by a repeated sample, otherwise.

Assuming that the accelerometer anti-imaging filter has 40dB of attenuation at nyquist, then the max amount that the signal can change from one sample to the next is 1% of the full scale value.

The error will be at worst case when the signal is full scale SIN wave at Fs/4
-analysis to be continued later

28/01/2006 Temp solution for interface to accelerometer

Provide the option to control the clock signal from a PWM output from the PIC.
Route the INT line as per usual.




Accelerometer configuration:









The LIS3LV outputs the data LSB first.
The PIC receives a 16bit word MSByte first.
Thus the bytes will need to be reversed.
Use the SWAP assembly instruction – 

The MISO pin on the BT module does not float when the CS pin is de-activated. For this proto, I have to cut the track to this pin.
(this is confirmed in the BC02 datasheet -  HYPERLINK "https://www.csrsupport.com/download/565/BlueCore2-Flash%20Data%20Sheet%20%28BC215159A-ds-001Pf%29.pdf" https://www.csrsupport.com/download/565/BlueCore2-Flash%20Data%20Sheet%20%28BC215159A-ds-001Pf%29.pdf




19/05/2006 Accelerometer noise measurements:

Proto circuit, running of full charged battery – 
1 unit is 1mG of acceleration


Now with a 100uF electrolytic cap directly in parallel with the 4.7uF ceramic cap on the accel AVdd pins this is the noise – 
X axis – 



And now the Y axis – 





And the Z axis – 





Observations:
1) there is no discernable difference in the noise between having the extra 100uF on AVdd or not. Perhaps there is a difference but it is too small to see visually, I will have to apply some functions to the data to yield the RMS noise values
2) the Y axis is about a factor of 2 quieter than the X or Z axes.

I will use the standard deviation as a figure of merit for the noise. Standard deviation is defined in Wikipedia as – 

In  HYPERLINK "http://en.wikipedia.org/wiki/Probability" \o "Probability" probability and  HYPERLINK "http://en.wikipedia.org/wiki/Statistics" \o "Statistics" statistics, the standard deviation is the most common measure of  HYPERLINK "http://en.wikipedia.org/wiki/Statistical_dispersion" \o "Statistical dispersion" statistical dispersion. Simply put, standard deviation measures how spread out the values in a data set are. More precisely, it is a measure of the average distance of the data values from their mean. If the data points are all close to the mean, then the standard deviation will be low (closer to zero). If many data points are very different from the mean, then the standard deviation is high (further from zero).

The Standard deviations are as follows
1) without 100uF cap

1.5657036631.0005177691.7250989082) with 100uF cap

1.3558970.8983211.864833
And so it appears that the X and Y axes are better by 10 to 20%, the Z axis is worse by 7%

3) with 1000uF and 100uF caps across Avdd
2.0746671.1269081.916106
Much worse.
This seems to suggest that either noise is getting in some other way (not the power supply, or the IO power supply) or perhaps mechanical vibrations?

4) as 3), take 2
1.5519170.9369641.572712
5) as 1), take 2

1.6224813011.0102746981.646153525




Accelerometers

using an ST device now, problems are - 
1)	fixed output data rates / sample rates
2)	too big ( 7mm * 7mm * 1.8mm )

current accelerometer:
LIS3LV02DQ
digikey /$9.5 / 1000
7mm * 7mm * 1.8mm


check the LIS331AL
3mm * 3mm * 1mm
no good, only has +/- 2g range plus noise = 300ug / rootHz!


LIS3L06AL
5mm * 5mm * 1.5mm
digikey price $8.25 / 1000
noise = 50uG / rootHz (Z) and 25uG / rootHz (XY)
Icc = 0.95mA

note:
(AD accelerometers typically 200uG / rootHz noise)


Oversampling notes:
If inertial sensors are LPF at 250Hz, what is the sample rate required for 40dB anti aliasing?
6dB / octave, require 6 octaves. Fs = 250 * 2 * 64 = 32kHz

What is the smallest resolution we can get away with?
ST accelerometer noise is 25uG / root Hz
With 250Hz bandwidth, noise is 25*15.8 = 375uG RMS = 1.113mG pk-pk
Full range = 4G, spread over 70% of the ADC range. Thus full ADC range corresponds to 5.7G
Thus the noise is 1.113m / 5.7 ~= 1 part in 5120 peak-peak
This would require a 13 bit ADC to ensure that the maximum resolution is attainable.
I would like this to be 10bits or less.

Lets set the LP corner of the accelerometer at 1000Hz. 
noise is 25*31.6 = 790uG RMS = 2.226mG pk-pk
Full range = 4G, spread over 70% of the ADC range. Thus full ADC range corresponds to 5.7G
Thus the noise is 2.226m / 5.7 ~= 1 part in 2560 peak-peak
Thus a 12 bit ADC is required.

Note: the above calculations are erroneously based on a RMS->peak conversion of a sine wave, not guassian noise.

What value of capacitance is required for a corner freq of 1kHz?
Cfilt = 1.5nF

22/11/2007 Level Shifting

I need to shift the levels from 0 -> 3V to 0 -> 2.5V, drop by 16%.
THe output of the accelerometer is a 110k resistor.
110k / ( 110k + R ) = 0.16
R = 577k
Let R = 560k

Now the effective output impedance is 560k*110k / ( 560k + 110k) = 92k.


Now 1.25V / 3V = R2 / ( R1 + R2)
And (R1*R2) / (R1 + R2) = 92k

0.42R1 + 0.42R2 = R2, 0.58R2 = 0.42R1,   R2 = 0.725R1

R1*0.725R1 / ( 1.725R1) = 92k

0.42R1 = 92k, R1 = 219k, R2 = 158k

Let R1 = 220k, R2 = 160k.  

Now the -3dB corner frequency will be 16% higher than calculated before, = 1153Hz.
This is too high, let Cfilt = 2.2nF now F-3dB = 790Hz.

14/07/2008 LIS3L06AL is at end of life!

LIS344ALH seems to be the closest replacement
 HYPERLINK "http://www.st.com/stonline/products/literature/ds/14337/lis344alh.pdf" http://www.st.com/stonline/products/literature/ds/14337/lis344alh.pdf

4mm * 4mm * 1.5mm   (LGA – 16 )
digikey price $8.25 / 1000
noise = 50uG / rootHz (XYZ) actually better, since I was at the limit of dither with 12 bit ADC.
Icc = 0.68mA
Non-linearity = 0.5%
Price is cheaper too - $4.99 / 1k – Digireel

08/09/2008 Ratiometric compensation not working

I think I have made a fundamental error in the compensation method ( namely subtracting AVdd/2 from all measurements )
The output from the accel is proportional to AVdd and acceleration. In addition there is also an offset voltage. If the ADC reference was AVdd, then we know that the acceleration would be adequately compensated. To fake this, we would need to scale the measurements, not offset them as we currently do.

We already have scaling of the acceleration signal to span the full 2.5V ADC input range. Assume that we sample AVdd/2, such that it will nominally be 1.5V * 4095 counts.
( this will allow us to use equal dividing resistors, instead of having to use an oddball resistor value ). Then the actual acceleration reference value from the point of view of the ADC will be 2.5/1.5 == 1.666 times the AVdd sampled count.
So the scaling factor to be applied to the acceleration values will be  4095 / (1.666 *  CountAVdd ) 
for calculation purposes, 1.66 factor is not efficient.
If we used 110k instead of 100k, and used 470k instead of 560k, then we could cater for a LDO voltage of up to 3.08V before the ADC saturates. Then we could just apply the scaling 4095 / CountAVdd. Is there any way to rid of the divide? This would be computationally expensive. It should be possible to compute it such that only one divide is necessary for all three channels.

uiAccVddScale = (uint32)(4096 * 4096) / CountAVdd

then

iAccX = (uint32)(uiAccXADCcount * uiAccVddScale) / 4096 - 2048;

1% resistors will be required.
worst case check
let Vldo = 3.08V
let Rtop = 110k – 1% = 109k
let Rbot = 470 + 1% = 475k
then VaccVdd on ADC pin is 2.505V.

the ZXCL300 is specified for +/-2% on the output voltage. 3V + 2% = 3.06V

the tolerances are all very close. Use 430k instead, and now we can get away with 5% resistors.

now the 300mV 
AVdd = 2.7V , 1g, z axis  == 1053 counts
AVdd = 3.0V , 1g, z axis  == 1012 counts

thus the sensitivity is 40mg / 300mV == 1mg / 7.5mV
still quite high, since without the compensation we would expect about 100mg / 300mV sensitivity.

check:
(voltage measurements made with FLUKE 87III, impedance ~= 1megOhm )
@AVDD = 3.014V, Zcount*4 = 4222, AVdd count*4 = 13893
@AVDD = 2.904V, Zcount*4 = 4575, AVdd count*4 = 14856
@AVDD = 2.711V, Zcount*4 = 4798, AVdd count*4 = 15420

the output voltage is not ratiometric for the z axis with 1g acceleration, by about 1.025 factor out.

it does seem to be ratiometric for acceleration values that are close to centered. For example the x axis has about 13mg applied, and the sensitivity to AVdd is about 2mg / 300mV.

from the LIS3LV06 datasheet – 

3.2 IC Interface
In order to increase robustness and immunity against external disturbances the complete
signal processing chain uses a fully differential structure. The final stage converts the
differential signal into a single-ended one to be compatible with the external world.
The signals of the sensing element are multiplexed and fed into a low-noise capacitive
charge amplifier that implements a Correlated Double Sampling system (CDS) at its output
to cancel the offset and the 1/f noise. The output signal is de-multiplexed and transferred to
three different S&Hs, one for each channel and made available to the outside.
The low noise input amplifier operates at 200 kHz while the three S&Hs operate at a
sampling frequency of 66 kHz. This allows a large oversampling ratio, which leads to inband
noise reduction and to an accurate output waveform.
All the analog parameters (Zero-g level, sensitivity and self-test) are ratiometric to the
supply voltage. Increasing or decreasing the supply voltage, the sensitivity and the offset will
increase or decrease almost linearly. The self test voltage change varies cubically with the
supply voltage.

am I making a mistake with my calculations?
the offset is clearly ratiometric, and the sensitivity is too, so ideally the Vdd signal should also be digitally filtered, and then the offset and gain calibration constants should be adjusted according to the Vdd delta from nominal.



19/09/2008 

Since the ratiometricity of the accelerometer is so poor, and I have observed drift due to load regulation on AVdd rail and noise when the magnetometer is enabled, it is important to include a separate stable supply for the accelerometer. This supply could also be used to supply the thermometer, for the same reason, and the thermometer will not have any load regulation / noise issues for the accelerometer.

For this regulator, the load regulation will not be so critical, but the line regulation needs to be better than 1mg @ 6g range which translates to about 1.5mV for a line input range of about 2V. Thus the line regulation needs to be better than 1000, or 60dB.

The ZXCL300 has a worst case line regulation of 1/1000, with 1/5000 being typical. So all we need is a separate ZXCL300 for the accelerometer.

Can we use a lower voltage regulator / reference so that we can get rid of the PD resistors feeding to the dsPIC ADC pins?
The LIS344ALH operates down to 2.4V, so we could run it from the reference. Max current @ 3.3V is 850uA.

In light of this, is it better to use a LDO type reference instead of the existing shunt type? If we keep the shunt type we will waste about 1mA of current when accel and gyros enabled, and need two extra dsPIC pins and two extra resistors.

keep in mind that the digital signals to the LIS344ALH can be a maximum of Vdd + 0.3V



so, if possible, it would be better to have a 2.7V reference. If this is not feasible, then the digital signals should have pull-up resistors to Vref, and the dsPIC outputs should be open drain.

( if we use a 2.7V reference, the PD for the magnetometer output will not be required, saving 2 resistors, and saving once resistor values( 2.2k ) )


see SHAKE Voltage Reference and Temperature Measurement Project Notes.doc

